/**
Each new term in the Fibonacci sequence is generated by 
adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose 
values do not exceed four million, find the sum of 
the even-valued terms.
F(0)=0, F(1)=1, F(n)=F(n-1)+F(n-2) for n>1.
*/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Project_Euler02
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] arr1 = new int[34];
            int[] arr2 = new int[39];
            for (int i = 0; i < 34; i++)
            {
                arr1[i] = fib(i);
                Console.WriteLine(arr1[i]);
            }
            arr1 = Array.FindAll(arr1, notEven).ToArray();

            for (int i = 0; i < arr1.Length; i++)
            {
                Console.WriteLine(arr1[i]);
            }

            int result = arr1.Sum();
            Console.Write("\n\n\n" + result);
            Console.ReadKey();

        }
        
        static int fib(int n)
        {
            int a = 0;
            int b = 1;
            for (int i = 0; i < n; i++)
            {
                int temp = a;
                a = b;
                b = temp + b;
               // Console.WriteLine("temp: " + temp);
               // Console.WriteLine("a: " + a);
               // Console.WriteLine("b: " + b);
                
            }
            return a;
        }
        static bool notEven(int n)
        {
            n = n % 2;
            return n == 0;
        }

    }
}
